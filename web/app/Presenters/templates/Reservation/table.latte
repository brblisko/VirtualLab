{block content}
    <div class="header-container">
        <h2>Available Time Slots</h2>
        <span id="userReservations">Loading...</span>
    </div>
    <div class="columns-container">
        {for $i = 0; $i < 3; $i++}
            {if $i == 2}
                <div class="last-column">
            {else}
                <div class="column">
            {/if}
                <ul>
                    {foreach $timeSlots as $key => $timeSlot}
                        {if $key >= $columnStartIndex[$i] && $key <= $columnEndIndex[$i]}
                            <div class="reservation">
                                <div class="box"> 
                                    {$timeSlot->format('d-m-Y H:i')}
                                </div>

                                <div class="box" id="{$timeSlot}">
                                </div>

                                <div class="box">
                                        <button class="reservation-button" data-timestamp="{$timeSlot}" type="submit">Reserve</button>
                                    </form>
                                </div>

                            </div>
                        {/if}
                    {/foreach}
                </ul>
            </div>
        {/for}
    </div>
{/block}

{block scripts}

<script>
function fetchData() {
    return fetch('/default/buttons')
        .then(response => response.json())
        .catch(error => {
            console.error('Error fetching data:', error);
            throw error;
        });
}

async function fetchFpgaCount() {
    try {
        const response = await fetch('/default/get-fpga-count');
        const data = await response.json();
        return data.count;
    } catch (error) {
        console.error('Error fetching data:', error);
        throw error;
    }
}


function updateButton(button, data) {
    const timestamp = button.getAttribute('data-timestamp');

    if (data.hasOwnProperty(timestamp)) {
        const activeReservation = data[timestamp].active_reservation;

        if (activeReservation) {
            button.textContent = 'Cancel';
            button.style.backgroundColor = 'lightcoral'; 
        } else {
            button.textContent = 'Reserve';
            button.style.backgroundColor = 'lightgreen';
        }
    }
}

function addListener(button){
    button.addEventListener('click', function() {
        fetchData()
            .then( data => {
                const timestamp = button.getAttribute('data-timestamp');
                if (data.hasOwnProperty(timestamp)) {
                    const activeReservation = data[timestamp].active_reservation;
                    const action = activeReservation ? 'cancel_reservation' : 'create_reservation';

                    fetch('/default/reservation', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            timestamp: timestamp,
                            action: action
                        })
                    })
                    .then(response => {
                        fetchData().then(updatedData => {
                            updateButton(button, updatedData);
                            updateCounter();
                        });
                    })
                    .catch(error => console.error('Error:', error));
                }
        });
    });
}

function updateCounter()
{
    fetch('/default/get-user-reservation-count')
        .then(response => response.json())
        .then(data => {
            document.getElementById("userReservations").textContent = "User reservation counter: " + data.count + "/5";
            console.log(data.count);
        })
        .catch(error => console.error('Error:', error));
}

window.onload = function() {
    fetchData()
        .then(data => {
            const buttons = document.querySelectorAll('.reservation-button');

            buttons.forEach(button => {
                updateButton(button, data);
                addListener(button);
            });
        })
        .catch(error => console.error('Error fetching data:', error));
        updateCounter();
}

document.addEventListener('DOMContentLoaded', function() {
    fetchAvailableSpots();

    async function fetchAvailableSpots() {

        const maxSpots = await fetchFpgaCount();
        fetch('/default/allreservations')
            .then(response => response.json())
            .then(data => {
                Object.keys(data).forEach(timestamp => {
                    const reservationCount = data[timestamp].reservation_count;
                    document.getElementById(timestamp).innerText = 'Current reservations: ' + reservationCount + '/' + maxSpots;
                });
            });
    }

    setInterval(fetchAvailableSpots, 60000);
});



</script>

{/block}
